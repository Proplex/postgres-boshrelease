# pgpool configuration
<%
  config = p('pgpool.config', {})
  config['listen_addresses'] ||= '*'
  config['port']             ||= 5432
  config['pcp_port']         ||= 9898
  # FIXME: support for SSL key?

  backends = link("db").instances
  if backends.empty? then
    raise "pgpool.backend.hosts property must define at least one postgres backend host!"
  end

  def val(v)
    return case
      when v == true;    "on"
      when v == false;   "off"
      when v.to_i == v;  "#{v}"
      else;              "'#{v}'"
    end
  end
%>
socket_dir                = '/var/vcap/sys/run/pgpool'
pcp_socket_dir            = '/var/vcap/sys/run/pgpool'
listen_backlog_multiplier = 2
serialize_accept          = on
pid_file_name             = '/var/vcap/sys/run/pgpool/pgpool.pid'
logdir                    = '/var/vcap/sys/log/pgpool'
log_line_prefix           = '%t %a %P[%p] %u@%d: '

connection_cache          = on
reset_query_list          = 'ABORT; DISCARD ALL'
pool_passwd               = 'passwd'
failover_command          = '/var/vcap/jobs/postgres/bin/failover'
# master_slave_mode         = on
# master_slave_sub_mode     = 'stream'


# recovery_user = 'postgres'
#                                    # Online recovery user
# recovery_password = 'nopass'
#                                    # Online recovery password
# #recovery_1st_stage_command = 'basebackup.sh'
#                                    # Executes a command in first stage
# recovery_2nd_stage_command = ''
#                                    # Executes a command in second stage
# recovery_timeout = 30
#                                    # Timeout in seconds to wait for the
#                                    # recovering node's postmaster to start up
#                                    # 0 means no wait
# client_idle_limit_in_recovery = 0
#                                    # Client is disconnected after being idle
#                                    # for that many seconds in the second stage
#                                    # of online recovery
#                                    # 0 means no disconnection
#                                    # -1 means immediate disconnection

<% link("db").instances.each_with_index do |instance, i| %>
backend_hostname<%= i %> = <%= val(instance.address) %>
backend_port<%= i %> = <%= val(p('pgpool.backend.port')) %>
<% end %>

###
<% config.each do |key, value|
%><%= key %> = <%= val(value) %>
<% end %>
