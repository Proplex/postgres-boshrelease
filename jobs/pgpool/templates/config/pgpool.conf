# pgpool configuration
<%
  config = p('pgpool.config', {})
  config['listen_addresses'] ||= '*'
  config['port']             ||= 5432
  config['pcp_port']         ||= 9898
  # FIXME: support for SSL key?

  backends = link("db").instances
  if backends.empty? then
    raise "pgpool.backend.hosts property must define at least one postgres backend host!"
  end

  def val(v)
    return case
      when v == true;    "on"
      when v == false;   "off"
      when v.to_i == v;  "#{v}"
      else;              "'#{v}'"
    end
  end
%>
socket_dir                = '/var/vcap/sys/run/pgpool'
pcp_socket_dir            = '/var/vcap/sys/run/pgpool'
listen_backlog_multiplier = 2
serialize_accept          = on
pid_file_name             = '/var/vcap/sys/run/pgpool/pgpool.pid'
logdir                    = '/var/vcap/sys/log/pgpool'
log_line_prefix           = '%t %a %P[%p] %u@%d: '

connection_cache          = on
reset_query_list          = 'ABORT; DISCARD ALL'
pool_passwd               = 'passwd'
master_slave_mode         = on
master_slave_sub_mode     = 'stream'
health_check_period       = 5
health_check_user         = 'vcap'
health_check_password     = ''
health_check_max_retries  = 10
failover_command = '/var/vcap/jobs/pgpool/bin/failover'

#failback_command = '/var/vcap/jobs/pgpool/bin/recovery'
# sr_check_period = 30
#                                    # Streaming replication check period
#                                    # Disabled (0) by default
sr_check_user = 'vcap'
                                   # Streaming replication check user
                                   # This is necessary even if you disable
                                   # streaming replication delay check with
                                   # sr_check_period = 0
sr_check_password = ''
#                                    # Password for streaming replication check user
# delay_threshold = 0
#                                    # Threshold before not dispatching query to standby node
#                                    # Unit is in bytes
#                                    # Disabled (0) by default
# recovery_user = 'vcap'
#                                    # Online recovery user
# recovery_password = ''
#                                    # Online recovery password
# recovery_1st_stage_command = '/var/vcap/jobs/pgpool/bin/WAL-E'
#                                    # Executes a command in first stage
# recovery_2nd_stage_command = ''
                                   # Executes a command in second stage
recovery_timeout = 30
                                   # Timeout in seconds to wait for the
                                   # recovering node's postmaster to start up
                                   # 0 means no wait


<% link("db").instances.each_with_index do |instance, i| %>
backend_hostname<%= i %> = <%= val(instance.address) %>
backend_port<%= i %> = <%= val(p('pgpool.backend.port')) %>
backend_data_directory<%= i %> = '/var/vcap/store/postgres/db/'
<% end %>

###
<% config.each do |key, value|
%><%= key %> = <%= val(value) %>
<% end %>
